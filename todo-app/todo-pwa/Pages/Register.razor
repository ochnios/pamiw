@page "/register"
@inject IJSRuntime js
@inject AuthService authService
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

<PageTitle>Register</PageTitle>

<div class="row">
    <h3 class="text-center">Register</h3>
    <div class="col-lg-4 offset-lg-4 pt-4 pb-4 border">
        <EditForm Model="model" OnValidSubmit="RegisterUser">
            <div class="mb-3">
                <label>Name</label>
                <InputText @bind-Value="model.Name" class="form-control" placeholder="User Name" />
            </div>
            <div class="mb-3">
                <label>Surname</label>
                <InputText @bind-Value="model.Surname" class="form-control" placeholder="User Surname" />
            </div>
            <div class="mb-3">
                <label>Email</label>
                <InputText @bind-Value="model.Email" class="form-control" placeholder="User Email" />
            </div>
            <div class="mb-3">
                <label>Password</label>
                <InputText @bind-Value="model.Password" type="password" class="form-control" placeholder="Password" />
            </div>
            <div class="mb-3">
                <label>Retype password</label>
                <InputText @bind-Value="retypedPassword" type="password" class="form-control" placeholder="Retype password" />
            </div>
            <div class="mb-3 d-grid gap-2">
                <button type="submit" class="btn btn-primary">Register</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private RegisterModel model = new RegisterModel();
    private String retypedPassword;

    protected override async Task OnInitializedAsync()
    {
        authService.Logout();
    }

    private async Task RegisterUser()
    {
        if (model.Password != retypedPassword)
        {
            await js.InvokeVoidAsync("alert", "Given passwords aren't the same!");
            return;
        }

        if (!await authService.Register(model))
        {
            await js.InvokeVoidAsync("alert", "Somenthing went wrong while registering, check data and try again");
            return;
        }

        navManager.NavigateTo("/login", false);
    }
}
